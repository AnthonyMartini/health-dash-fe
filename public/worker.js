self.addEventListener("push", function (event) {
  try {
    const data = event.data?.json();
    console.log("üì® Push Event Received");
    console.log("üì¶ Raw Notification Data:", event.data);
    console.log("üìù Parsed Notification Data:", data);
    console.log("üîî Notification Title:", data?.title);
    console.log("üìÑ Notification Body:", data?.text);
    console.log("üñºÔ∏è Notification Icon:", data?.icon);

    const title = data?.title || "Default Title";
    const options = {
      body: data?.text || "Default body text",
      icon: data?.icon || "/AppIcon.svg", // replace or test with a public URL
      data: data, // Include the full data in the notification
    };

    event.waitUntil(
      self.registration.showNotification(title, options)
        .then(() => console.log("‚úÖ Notification displayed successfully"))
        .catch(err => console.error("‚ùå Error displaying notification:", err))
    );
  } catch (err) {
    console.error("‚ùå Error in push handler:", err);
    console.error("‚ùå Error details:", {
      message: err.message,
      stack: err.stack,
      name: err.name
    });
    event.waitUntil(
      self.registration.showNotification("Push Error", {
        body: "Something went wrong handling the push notification.",
      })
    );
  }
});
